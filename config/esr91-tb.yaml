tree: 'esr91'
name: 'Thunderbird ESR 91'
version: 91
description: |
  Policies can be specified by creating a file called `policies.json`:
  * Windows: place the file in a directory called `distribution` in the same
    directory where `thunderbird.exe` is located.
  * Mac: place the file into `Thunderbird.app/Contents/Resources/distribution`
  * Linux: place the file into `thunderbird/distribution`, where `thunderbird`
    is the installation directory for Thunderbird. You can also specify a system-wide
    policy by placing the file in `/etc/thunderbird/policies`.

  Alternatively, policies can be specified via platform specific methods:
  * Windows: [thunderbird.admx](https://github.com/thunderbird/policy-templates/tree/master/docs/templates/esr91/windows) — use with [group policy templates](https://support.mozilla.org/en-US/kb/customizing-thunderbird-using-group-policy-windows) or [intune](https://support.mozilla.org/kb/managing-thunderbird-intune)
  * Mac: [org.mozilla.thunderbird.plist](https://github.com/thunderbird/policy-templates/blob/master/docs/templates/esr91/mac/org.mozilla.thunderbird.plist) — use with [configuration profiles](https://support.mozilla.org/en-US/kb/managing-policies-macos-desktops)

  This document provides for all policies examples for the mentioned formats.
policies:
  ExtensionSettings:
    toc: 'Manage all aspects of extensions.'
    content: |
      Manage all aspects of extensions. This policy is based heavily on the [Chrome policy](https://dev.chromium.org/administrators/policy-list-3/extension-settings-full) of the same name.

      This policy maps an extension ID to its configuration. With an extension ID, the configuration will be applied to the specified extension only. A default configuration can be set for the special ID "*", which will apply to all extensions that don't have a custom configuration set in this policy.

      To obtain an extension ID, install the extension and go to about:support. You will see the ID in the Extensions section.

      The configuration for each extension is another dictionary that can contain the fields documented below.

      | Name | Description |
      | --- | --- |
      | `installation_mode` | Maps to a string indicating the installation mode for the extension. The valid strings are `allowed`, `blocked`, `force_installed`, and `normal_installed`. |
      |     `allowed` | Allows the extension to be installed by the user. This is the default behavior. |
      |     `blocked` | Blocks installation of the extension and removes it if already installed. |
      |     `force_installed` | Automatically installs the extension and prevents removal. Requires `install_url`. |
      |     `normal_installed` | Automatically installs the extension but allows disabling. Requires `install_url`. |
      | `install_url` | URL where Thunderbird can download the extension (e.g. from ATN or `file:///`). |
      | `install_sources` | List of allowed extension installation sources. |
      | `allowed_types` | Whitelist of extension types like `extension`, `theme`, etc. |
      | `blocked_install_message` | Custom error message when a blocked extension is attempted. |
      | `restricted_domains` | Domains on which extension content scripts can't run. |
      | `updates_disabled` | Boolean to disable auto-updates for the extension. |

      *As of Thunderbird 85, Thunderbird ESR 78.7, installing a theme makes it the default.*
    cck2Equivalent:
    preferencesAffected:
    gpo:
      - key: 'Software\Policies\Mozilla\Thunderbird\ExtensionSettings'
        type: 'REG_MULTI_SZ'
        value: |
          {
            "*": {
              "blocked_install_message": "Custom error message.",
              "install_sources": ["about:addons", "https://addons.thunderbird.net/"],
              "installation_mode": "blocked",
              "allowed_types": ["extension"]
            },
            "uBlock0@raymondhill.net": {
              "installation_mode": "force_installed",
              "install_url": "https://addons.thunderbird.net/thunderbird/downloads/latest/ublock-origin/latest.xpi"
            },
            "https-everywhere@eff.org": {
              "installation_mode": "allowed"
            }
          }
    intune:
      - oma-uri: './Device/Vendor/MSFT/Policy/Config/Thunderbird~Policy~thunderbird~Extensions/ExtensionSettings'
        type: 'string'
        value: |
          <enabled/>
          <data id="ExtensionSettings" value='{
            "*": {
              "blocked_install_message": "Custom error message.",
              "install_sources": ["about:addons", "https://addons.thunderbird.net/"],
              "installation_mode": "blocked",
              "allowed_types": ["extension"]
            },
            "uBlock0@raymondhill.net": {
              "installation_mode": "force_installed",
              "install_url": "https://addons.thunderbird.net/thunderbird/downloads/latest/ublock-origin/latest.xpi"
            },
            "https-everywhere@eff.org": {
              "installation_mode": "allowed"
            }
          }'/>
    plist: |
      <dict>
        <key>ExtensionSettings</key>
        <dict>
          <key>*</key>
          <dict>
            <key>blocked_install_message</key>
            <string>Custom error message.</string>
            <key>install_sources</key>
            <array>
              <string>about:addons</string>
              <string>https://addons.thunderbird.net/</string>
            </array>
            <key>installation_mode</key>
            <string>blocked</string>
            <key>allowed_types</key>
            <array>
              <string>extension</string>
            </array>
          </dict>
          <key>uBlock0@raymondhill.net</key>
          <dict>
            <key>installation_mode</key>
            <string>force_installed</string>
            <key>install_url</key>
            <string>https://addons.thunderbird.net/thunderbird/downloads/latest/ublock-origin/latest.xpi</string>
          </dict>
          <key>https-everywhere@eff.org</key>
          <dict>
            <key>installation_mode</key>
            <string>allowed</string>
          </dict>
        </dict>
      </dict>
    json: |
      {
        "policies": {
          "ExtensionSettings": {
            "*": {
              "blocked_install_message": "Custom error message.",
              "install_sources": ["about:addons", "https://addons.thunderbird.net/"],
              "installation_mode": "blocked",
              "allowed_types": ["extension"]
            },
            "uBlock0@raymondhill.net": {
              "installation_mode": "force_installed",
              "install_url": "https://addons.thunderbird.net/thunderbird/downloads/latest/ublock-origin/latest.xpi"
            },
            "https-everywhere@eff.org": {
              "installation_mode": "allowed"
            }
          }
        }
      }
  Preferences:
    toc: 'Set and lock preferences.'
    content: |
      **NOTE:** On Windows, in order to use this policy, you must clear all settings in the old **`Preferences (Deprecated)`** section for Thunderbird 78 and older.

      Previously you could only set and lock a subset of preferences. Starting with Thunderbird 91 you can set many more preferences. You can also set default preferences, user preferences and you can clear preferences.

      Preferences that start with the following prefixes are supported:
      ```
      accessibility.
      app.update.
      browser.
      datareporting.policy.
      dom.
      extensions.
      general.autoScroll
      general.smoothScroll
      geo.
      gfx.
      intl.
      layers.
      layout.
      media.
      network.
      pdfjs.
      places.
      print.
      signon.
      spellchecker.
      ui.
      widget.
      ```
      as well as the following security preferences:

      | Preference | Type | Default |
      | --- | --- | --- |
      | security.default_personal_cert | string | Ask Every Time
      | &nbsp;&nbsp;&nbsp;&nbsp;If set to Select Automatically, Thunderbird automatically chooses the default personal certificate.
      | security.insecure_connection_text.enabled | boolean | false
      | &nbsp;&nbsp;&nbsp;&nbsp;If set to true, adds the words "Not Secure" for insecure sites.
      | security.insecure_connection_text.pbmode.enabled | boolean | false
      | &nbsp;&nbsp;&nbsp;&nbsp;If set to true, adds the words "Not Secure" for insecure sites in private browsing.
      | security.insecure_field_warning.contextual.enabled | boolean | true
      | &nbsp;&nbsp;&nbsp;&nbsp;If set to false, remove the warning for inscure login fields.
      | security.mixed_content.block_active_content | boolean | true
      | &nbsp;&nbsp;&nbsp;&nbsp;If false, mixed active content (HTTP and HTTPS) is not blocked.
      | security.osclientcerts.autoload | boolean | false
      | &nbsp;&nbsp;&nbsp;&nbsp;If true, client certificates are loaded from the operating system certificate store.
      | security.ssl.errorReporting.enabled | boolean | true
      | &nbsp;&nbsp;&nbsp;&nbsp;If false, SSL errors cannot be sent to Mozilla.
      | security.tls.hello_downgrade_check | boolean | true
      | &nbsp;&nbsp;&nbsp;&nbsp;If false, the TLS 1.3 downgrade check is disabled.
      | security.tls.version.enable-deprecated | boolean | false
      | &nbsp;&nbsp;&nbsp;&nbsp;If true, browser will accept TLS 1.0. and TLS 1.1
      | security.warn_submit_secure_to_insecure | boolean | true
      | &nbsp;&nbsp;&nbsp;&nbsp;If false, no warning is shown when submitting s form from https to http.

      Using the preference as the key, set the `Value` to the corresponding preference value.

      `Status` can be "default", "locked", "user" or "clear"

      Default preferences can be modified by the user.

      If a value is locked, it is also set as the default.

      User preferences persist across invocations of Thunderbird. It is the equivalent of a user setting the preference. They are most useful when a preference is needed very early in startup so it can't be set as default by policy.

      User preferences persist even if the policy is removed, so if you need to remove them, you should use the clear policy.

      See the examples below for more detail.

      IMPORTANT: Make sure you're only setting a particular preference using this mechanism and not some other way.
    cck2Equivalent: 'preferences'
    preferencesAffected: 'Many'
    gpo:
      - key: 'Software\Policies\Mozilla\Thunderbird\Preferences'
        type: 'REG_MULTI_SZ'
        value: |
          {
            "accessibility.force_disabled": {
              "Value": 1,
              "Status": "default"
            },
            "browser.cache.disk.parent_directory": {
              "Value": "SOME_NATIVE_PATH",
              "Status": "user"
            }
          }
    intune:
      - oma-uri: './Device/Vendor/MSFT/Policy/Config/Thunderbird~Policy~thunderbird/Preferences'
        type: 'string'
        value: |
          <enabled/>
          <data id="JSON" value='
          {
            "accessibility.force_disabled": {
              "Value": 1,
              "Status": "default"
            },
            "browser.cache.disk.parent_directory": {
              "Value": "SOME_NATIVE_PATH",
              "Status": "user"
            }
          }'/>
    plist: |
      <dict>
        <key>Preferences</key>
        <dict>
          <key>accessibility.force_disabled</key>
          <dict>
            <key>Value</key>
            <integer>1</integer>
            <key>Status</key>
            <string>default</string>
          </dict>
          <key>browser.cache.disk.parent_directory</key>
          <dict>
            <key>Value</key>
            <string>SOME_NATIVE_PATH</string>
            <key>Status</key>
            <string>user</string>
          </dict>
        </dict>
      </dict>
    json: |
      {
        "policies": {
          "Preferences": {
            "accessibility.force_disabled": {
              "Value": 1,
              "Status": "default"
            },
            "browser.cache.disk.parent_directory": {
              "Value": "SOME_NATIVE_PATH",
              "Status": "user"
            }
          }
        }
      }
